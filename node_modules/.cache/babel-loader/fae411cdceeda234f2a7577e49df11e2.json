{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\web project\\\\REACT\\\\amalitech-visitor-management-system\\\\src\\\\components\\\\Admin\\\\MyVisitorsLogs.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"../Layout/Sidebar\";\nimport { fetchVisitorsLog } from \"../../actions/adminActions\";\nimport Pagination from \"./Pagination\";\nimport VisitorLogsDetails from \"./VisitorLogsDetails\";\n\nclass MyVisitorsLogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      currentPage: 1,\n      postsPerPage: 5,\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        fetchVisitorsLog\n      } = this.props;\n      await fetchVisitorsLog();\n      const {\n        visitorsLogs\n      } = this.props;\n      this.setState({\n        posts: visitorsLogs,\n        loading: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      posts,\n      postsPerPage,\n      currentPage,\n      loading\n    } = this.state;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"forgot-password text-center mt-4 loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"spinner-border text-primary  my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"Processing...\"));\n    }\n\n    if (!posts || posts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 d-none d-sm-block d-xs-block sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container alert alert-info text-center mt-5 col-md-4 info-cont alert-dismissible fade show\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"You have no logged visitor yet.\"));\n    }\n\n    const totalPages = Math.ceil(posts.length / postsPerPage);\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNum => this.setState({\n      currentPage: pageNum\n    });\n\n    const nextPage = () => {\n      if (currentPage + 1 > totalPages) return;\n      this.setState({\n        currentPage: currentPage + 1\n      });\n    };\n\n    const prevPage = () => {\n      if (currentPage - 1 < 1) return;\n      this.setState({\n        currentPage: currentPage - 1\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 mx-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"my-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, \"Visitors' Log\"), /*#__PURE__*/React.createElement(VisitorLogsDetails, {\n      posts: currentPosts,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate,\n      nextPage: nextPage,\n      prevPage: prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nMyVisitorsLogs.propTypes = {\n  visitorsLogs: PropTypes.array.isRequired,\n  fetchVisitorsLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  visitorsLogs: state.logs.visitorsLogs\n});\n\nexport default connect(mapStateToProps, {\n  fetchVisitorsLog\n})(MyVisitorsLogs);","map":{"version":3,"sources":["C:/Users/USER/Desktop/web project/REACT/amalitech-visitor-management-system/src/components/Admin/MyVisitorsLogs.js"],"names":["React","Component","connect","PropTypes","Sidebar","fetchVisitorsLog","Pagination","VisitorLogsDetails","MyVisitorsLogs","state","posts","currentPage","postsPerPage","loading","componentDidMount","setState","props","visitorsLogs","render","length","totalPages","Math","ceil","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNum","nextPage","prevPage","propTypes","array","isRequired","func","mapStateToProps","logs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"../Layout/Sidebar\";\nimport { fetchVisitorsLog } from \"../../actions/adminActions\";\nimport Pagination from \"./Pagination\";\nimport VisitorLogsDetails from \"./VisitorLogsDetails\";\n\nclass MyVisitorsLogs extends Component {\n  state = {\n    posts: [],\n    currentPage: 1,\n    postsPerPage: 5,\n    loading: false,\n  };\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    const { fetchVisitorsLog } = this.props;\n    await fetchVisitorsLog();\n    const { visitorsLogs } = this.props;\n    this.setState({\n      posts: visitorsLogs,\n      loading: false,\n    });\n  };\n\n  render() {\n    const { posts, postsPerPage, currentPage, loading } = this.state;\n\n    if (loading) {\n      return (\n        <div className=\"forgot-password text-center mt-4 loading\">\n          <p className=\"spinner-border text-primary  my-3\"></p>\n          <p className=\"my-2\">Processing...</p>\n        </div>\n      );\n    }\n\n    if (!posts || posts.length === 0) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-md-2 d-none d-sm-block d-xs-block sidebar\">\n            <Sidebar />\n          </div>\n          <div\n            className=\"container alert alert-info text-center mt-5 col-md-4 info-cont alert-dismissible fade show\"\n            role=\"alert\"\n          >\n            You have no logged visitor yet.\n          </div>\n        </div>\n      );\n    }\n\n    const totalPages = Math.ceil(posts.length / postsPerPage);\n\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = (pageNum) => this.setState({ currentPage: pageNum });\n    const nextPage = () => {\n      if (currentPage + 1 > totalPages) return;\n      this.setState({ currentPage: currentPage + 1 });\n    };\n    const prevPage = () => {\n      if (currentPage - 1 < 1) return;\n      this.setState({ currentPage: currentPage - 1 });\n    };\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-2 sidebar\">\n          <Sidebar />\n        </div>\n        <div className=\"col-md-8 mx-auto mt-3\">\n          <h2 className=\"my-3 text-center\">Visitors' Log</h2>\n          <VisitorLogsDetails posts={currentPosts} loading={loading} />\n          <Pagination\n            postsPerPage={postsPerPage}\n            totalPosts={posts.length}\n            paginate={paginate}\n            nextPage={nextPage}\n            prevPage={prevPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nMyVisitorsLogs.propTypes = {\n  visitorsLogs: PropTypes.array.isRequired,\n  fetchVisitorsLog: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  visitorsLogs: state.logs.visitorsLogs,\n});\nexport default connect(mapStateToProps, { fetchVisitorsLog })(MyVisitorsLogs);\n"]},"metadata":{},"sourceType":"module"}