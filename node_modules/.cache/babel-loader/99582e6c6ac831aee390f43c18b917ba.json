{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\avm\\\\VisitorManagement\\\\src\\\\components\\\\Admin\\\\VisitorType.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { registerVisitor } from \"../../actions/adminActions\"; //import Templates from \"../Layout/EmployeSel\";\n\nclass VisitorType extends Component {\n  constructor() {\n    super();\n\n    this.componentWillReceiveProps = nextProps => {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors,\n          isLoading: false\n        });\n      }\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const {\n        sex\n      } = this.state;\n      const visitorDetails = {\n        sex\n      };\n      const {\n        registerVisitor,\n        history\n      } = this.props;\n      registerVisitor(visitorDetails, history);\n    };\n\n    this.state = {\n      sex: \"\",\n      isLoading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      sex,\n      isLoading,\n      errors\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"forgot-password text-center mt-4 loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"spinner-border text-primary  my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"Processing...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header-h1 text-center my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Tell Us About Yourself\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"inputAddress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.address\n      }),\n      id: \"inputAddress\",\n      placeholder: \"Market Circle...\",\n      value: address,\n      name: \"address\",\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), errors.address && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, errors.address)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }\n    }, \"You Are\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      name: \"sex\",\n      value: sex,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, \"I Am...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Visitor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, \"Visitor\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Contractor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Contractor\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Delivery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, \"Delivery\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"whomToSee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, \"Whom To See\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.whomToSee\n      }),\n      id: \"whomToSee\",\n      name: \"whomToSee\",\n      value: whomToSee,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }), errors.whomToSee && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, errors.whomToSee)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"purpose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, \"Purpose of Visit\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.purpose\n      }),\n      id: \"purpose\",\n      name: \"purpose\",\n      value: purpose,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }), errors.purpose && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, errors.purpose))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary d-block my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \"Enter Details\")))));\n  }\n\n}\n\nVisitorType.propTypes = {\n  registerVisitor: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerVisitor\n})(VisitorType);","map":{"version":3,"sources":["C:/Users/USER/Desktop/avm/VisitorManagement/src/components/Admin/VisitorType.js"],"names":["React","Component","connect","PropTypes","classnames","registerVisitor","VisitorType","constructor","componentWillReceiveProps","nextProps","errors","setState","isLoading","handleOnChange","event","target","name","value","handleOnSubmit","preventDefault","sex","state","visitorDetails","history","props","render","address","whomToSee","purpose","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { registerVisitor } from \"../../actions/adminActions\";\n\n//import Templates from \"../Layout/EmployeSel\";\n\nclass VisitorType extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      \n      sex: \"\",\n      \n      isLoading: false,\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n        isLoading: false,\n      });\n    }\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    const {\n     \n      sex,\n     \n    } = this.state;\n\n    const visitorDetails = {\n      \n      sex,\n      \n    };\n    const { registerVisitor, history } = this.props;\n    registerVisitor(visitorDetails, history);\n  };\n\n  render() {\n    const {\n      \n      sex,\n     \n      isLoading,\n      errors,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"forgot-password text-center mt-4 loading\">\n          <p className=\"spinner-border text-primary  my-3\"></p>\n          <p className=\"my-2\">Processing...</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"row\">\n          {/* <div className=\"col-md-2 d-none d-sm-block d-xs-block sidebar\">\n            <Sidebar />\n          </div> */}\n          <div className=\"col-md-8 mx-auto\">\n            <h1 className=\"header-h1 text-center my-4\">Tell Us About Yourself</h1>\n            <form onSubmit={this.handleOnSubmit}>\n              <div className=\"form-row\">\n           \n  \n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"inputAddress\">Address</label>\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control\", {\n                    \"is-invalid\": errors.address,\n                  })}\n                  id=\"inputAddress\"\n                  placeholder=\"Market Circle...\"\n                  value={address}\n                  name=\"address\"\n                  onChange={this.handleOnChange}\n                  required\n                />\n                {errors.address && (\n                  <div className=\"invalid-feedback\">{errors.address}</div>\n                )}\n              </div>\n               <div className=\"form-group\">\n               <label htmlFor=\"in\">You Are</label>\n                <select\n                  className=\"form-control form-control-lg\"\n                  name=\"sex\"\n                  value={sex}\n                  onChange={this.handleOnChange}\n                  required\n                >\n                  <option value=\"\">I Am...</option>\n                  <option value=\"Visitor\">Visitor</option>\n                  <option value=\"Contractor\">Contractor</option>\n                  <option value=\"Delivery\">Delivery</option>\n                </select>\n              </div> \n              <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                  \n                  <label htmlFor=\"whomToSee\">Whom To See</label>\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control\", {\n                      \"is-invalid\": errors.whomToSee,\n                    })}\n                    id=\"whomToSee\"\n                    name=\"whomToSee\"\n                    value={whomToSee}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.whomToSee && (\n                    <div className=\"invalid-feedback\">{errors.whomToSee}</div>\n                  )}\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <label htmlFor=\"purpose\">Purpose of Visit</label>\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control\", {\n                      \"is-invalid\": errors.purpose,\n                    })}\n                    id=\"purpose\"\n                    name=\"purpose\"\n                    value={purpose}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.purpose && (\n                    <div className=\"invalid-feedback\">{errors.purpose}</div>\n                  )}\n                </div>\n              </div>\n\n              {/* <div className=\"form-group\">\n                <label htmlFor=\"assets\">Assets</label>\n                <textarea\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Enter visitor's asset(s) e.g Laptop(Hp, ax23566bnsn), phone(infinix, bn3367gsje) etc.\"\n                  id=\"assets\"\n                  name=\"assets\"\n                  value={assets}\n                  onChange={this.handleOnChange}\n                ></textarea>\n              </div> */}\n\n              <button type=\"submit\" className=\"btn btn-primary d-block my-4\">\n                Enter Details\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nVisitorType.propTypes = {\n  registerVisitor: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { registerVisitor })(VisitorType);\n"]},"metadata":{},"sourceType":"module"}