{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\avm\\\\VisitorManagement\\\\src\\\\components\\\\Admin\\\\Chart.js\";\nimport React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.dateHoursExtractor = datesArr => {\n      const dateHours = [0, 0, 0, 0, 0];\n\n      for (let i = 0; i < datesArr.length; i++) {\n        let timeIn = new Date(datesArr[i].timeIn);\n        timeIn = timeIn.getHours();\n\n        if (timeIn > 7 && timeIn < 10) {\n          dateHours[0] = ++dateHours[0];\n        } else if (timeIn > 9 && timeIn < 12) {\n          dateHours[1] = ++dateHours[1];\n        } else if (timeIn > 11 && timeIn < 14) {\n          dateHours[2] = ++dateHours[2];\n        } else if (timeIn > 13 && timeIn < 16) {\n          dateHours[3] = ++dateHours[3];\n        } else if (timeIn > 16) {\n          dateHours[4] = ++dateHours[4];\n        }\n      }\n\n      return dateHours;\n    };\n\n    this.componentDidMount = async () => {\n      const res = await axios.get(`/api/v1/visitors/todays-logs`);\n      if (res.data === \"No result found\") return;\n      const resData = res.data;\n      const newChartData = this.state.chartData;\n\n      if (resData.length > 0) {\n        const dateArr = this.dateHoursExtractor(resData);\n        newChartData.datasets[0].data = dateArr;\n        this.setState({\n          chartData: newChartData,\n          isData: true\n        });\n      }\n    };\n\n    this.state = {\n      isData: false,\n      chartData: {\n        labels: [\"8-10am\", \"8-12pm\", \"12-2pm\", \"2-4pm\", \"4pm+\"],\n        datasets: [{\n          label: \"VMS Analytics For Today\",\n          data: [0, 0, 0, 0, 0],\n          backgroundColor: [\"rgba(255, 99, 132, 0.6)\", \"rgba(54, 162, 235, 0.6)\", \"rgba(255, 206, 86, 0.6)\", \"rgba(75, 192, 192, 0.6)\", \"rgba(153, 102, 255, 0.6)\", \"rgba(82, 102, 87, 0.6)\"]\n        }]\n      }\n    };\n  }\n\n  render() {\n    const {\n      isData\n    } = this.state;\n\n    if (!isData) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Jumbotron  text-center info-cont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"alert alert-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \" \", \"You have no logged visitor today so chart cannot be drawn...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.chartData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/USER/Desktop/avm/VisitorManagement/src/components/Admin/Chart.js"],"names":["React","Component","Bar","axios","Chart","constructor","props","dateHoursExtractor","datesArr","dateHours","i","length","timeIn","Date","getHours","componentDidMount","res","get","data","resData","newChartData","state","chartData","dateArr","datasets","setState","isData","labels","label","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isData: false,\n      chartData: {\n        labels: [\"8-10am\", \"8-12pm\", \"12-2pm\", \"2-4pm\", \"4pm+\"],\n        datasets: [\n          {\n            label: \"VMS Analytics For Today\",\n            data: [0, 0, 0, 0, 0],\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.6)\",\n              \"rgba(54, 162, 235, 0.6)\",\n              \"rgba(255, 206, 86, 0.6)\",\n              \"rgba(75, 192, 192, 0.6)\",\n              \"rgba(153, 102, 255, 0.6)\",\n              \"rgba(82, 102, 87, 0.6)\",\n            ],\n          },\n        ],\n      },\n    };\n  }\n\n  dateHoursExtractor = (datesArr) => {\n    const dateHours = [0, 0, 0, 0, 0];\n    for (let i = 0; i < datesArr.length; i++) {\n      let timeIn = new Date(datesArr[i].timeIn);\n      timeIn = timeIn.getHours();\n      if (timeIn > 7 && timeIn < 10) {\n        dateHours[0] = ++dateHours[0];\n      } else if (timeIn > 9 && timeIn < 12) {\n        dateHours[1] = ++dateHours[1];\n      } else if (timeIn > 11 && timeIn < 14) {\n        dateHours[2] = ++dateHours[2];\n      } else if (timeIn > 13 && timeIn < 16) {\n        dateHours[3] = ++dateHours[3];\n      } else if (timeIn > 16) {\n        dateHours[4] = ++dateHours[4];\n      }\n    }\n\n    return dateHours;\n  };\n\n  componentDidMount = async () => {\n    const res = await axios.get(`/api/v1/visitors/todays-logs`);\n    if (res.data === \"No result found\") return;\n    const resData = res.data;\n    const newChartData = this.state.chartData;\n    if (resData.length > 0) {\n      const dateArr = this.dateHoursExtractor(resData);\n      newChartData.datasets[0].data = dateArr;\n      this.setState({\n        chartData: newChartData,\n        isData: true,\n      });\n    }\n  };\n\n  render() {\n    const { isData } = this.state;\n    if (!isData) {\n      return (\n        <div className=\"Jumbotron  text-center info-cont\">\n          <p className=\"alert alert-info\">\n            {\" \"}\n            You have no logged visitor today so chart cannot be drawn...\n          </p>\n        </div>\n      );\n    }\n    return (\n      <div className=\"chart\">\n        <Bar data={this.state.chartData} />\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}