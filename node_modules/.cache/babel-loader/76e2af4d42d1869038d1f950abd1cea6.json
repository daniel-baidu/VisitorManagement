{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Unik\\\\Desktop\\\\amalitech\\\\react\\\\visitor-management-system-client-master\\\\visitor-management-system-client-master\\\\src\\\\components\\\\Admin\\\\RegisterAdmin.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { registerAdmin } from \"../../actions/adminActions\";\n\nclass RegisterAdmin extends Component {\n  constructor() {\n    super();\n\n    this.componentWillReceiveProps = nextProps => {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors,\n          isLoading: false\n        });\n      }\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      const {\n        fullname,\n        username,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const newAdmin = {\n        fullname,\n        username,\n        email,\n        password,\n        confirmPassword\n      };\n      const {\n        registerAdmin,\n        history\n      } = this.props;\n      registerAdmin(newAdmin, history);\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      fullname: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      fullname,\n      username,\n      email,\n      password,\n      confirmPassword,\n      errors,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"forgot-password text-center mt-4 loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"spinner-border text-primary  my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Processing...\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header-h1 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Admin Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Create Admin Account\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.fullname\n      }),\n      placeholder: \"fullname\",\n      name: \"fullname\",\n      value: fullname,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), errors.fullname && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, errors.fullname)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(`form-control form-control-lg `, {\n        \"is-invalid\": errors.username\n      }),\n      placeholder: \"Username\",\n      name: \"username\",\n      value: username,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }), errors.username && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: classnames(`form-control form-control-lg`, {\n        \"is-invalid\": errors.email\n      }),\n      placeholder: \"Email Address\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.password\n      }),\n      placeholder: \"Password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.confirmPassword\n      }),\n      placeholder: \"Confirm Password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleOnChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }), errors.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nRegisterAdmin.propTypes = {\n  registerAdmin: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerAdmin\n})(RegisterAdmin);","map":{"version":3,"sources":["C:/Users/Unik/Desktop/amalitech/react/visitor-management-system-client-master/visitor-management-system-client-master/src/components/Admin/RegisterAdmin.js"],"names":["React","Component","connect","PropTypes","classnames","registerAdmin","RegisterAdmin","constructor","componentWillReceiveProps","nextProps","errors","setState","isLoading","handleOnSubmit","event","preventDefault","fullname","username","email","password","confirmPassword","state","newAdmin","history","props","handleOnChange","target","name","value","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { registerAdmin } from \"../../actions/adminActions\";\n\nclass RegisterAdmin extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fullname: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n      isLoading: false,\n    };\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n        isLoading: false,\n      });\n    }\n  };\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    const { fullname, username, email, password, confirmPassword } = this.state;\n    const newAdmin = {\n      fullname,\n      username,\n      email,\n      password,\n      confirmPassword,\n    };\n    const { registerAdmin, history } = this.props;\n    registerAdmin(newAdmin, history);\n  };\n\n  handleOnChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    const {\n      fullname,\n      username,\n      email,\n      password,\n      confirmPassword,\n      errors,\n      isLoading,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"forgot-password text-center mt-4 loading\">\n          <p className=\"spinner-border text-primary  my-3\"></p>\n          <p className=\"my-2\">Processing...</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"register-admin\">\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"header-h1 text-center\">Admin Sign Up</h1>\n              <p className=\"lead text-center\">Create Admin Account</p>\n              <form onSubmit={this.handleOnSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullname,\n                    })}\n                    placeholder=\"fullname\"\n                    name=\"fullname\"\n                    value={fullname}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.fullname && (\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(`form-control form-control-lg `, {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(`form-control form-control-lg`, {\n                      \"is-invalid\": errors.email,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">{errors.email}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={this.handleOnChange}\n                    required\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterAdmin.propTypes = {\n  registerAdmin: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { registerAdmin })(RegisterAdmin);\n"]},"metadata":{},"sourceType":"module"}