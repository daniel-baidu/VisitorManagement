{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\avm\\\\VisitorManagement\\\\src\\\\components\\\\Admin\\\\MyRegisteredVisitors.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"../Layout/Sidebar\";\nimport { fetchVisitors } from \"../../actions/adminActions\";\nimport VisitorsDetails from \"./VisitorsDetails\";\nimport Pagination from \"./Pagination\";\nimport ReactDOM from \"react-dom\";\nimport Pdf from \"react-to-pdf\";\n\nclass MyRegisteredVisitors extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      currentPage: 1,\n      postsPerPage: 5,\n      loading: false\n    };\n\n    this.componentDidMount = async () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        fetchVisitors\n      } = this.props;\n      await fetchVisitors();\n      const {\n        visitors\n      } = this.props;\n      this.setState({\n        posts: visitors,\n        loading: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      posts,\n      postsPerPage,\n      currentPage,\n      loading\n    } = this.state;\n    const ref = React.createRef();\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"forgot-password text-center mt-4 loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"spinner-border text-primary  my-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, \"Processing...\"));\n    }\n\n    if (!posts || posts.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-2 bg-info sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container alert alert-info text-center mt-5 col-md-4 info-cont mt-4\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"You have no registered visitor yet.\"));\n    }\n\n    const totalPages = Math.ceil(posts.length / postsPerPage);\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNum => this.setState({\n      currentPage: pageNum\n    });\n\n    const nextPage = () => {\n      if (currentPage + 1 > totalPages) return;\n      this.setState({\n        currentPage: currentPage + 1\n      });\n    };\n\n    const prevPage = () => {\n      if (currentPage - 1 < 1) return;\n      this.setState({\n        currentPage: currentPage - 1\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 d-none d-sm-block d-xs-block sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 mx-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"my-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Registered Visitors\"), /*#__PURE__*/React.createElement(VisitorsDetails, {\n      posts: currentPosts,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate,\n      nextPage: nextPage,\n      prevPage: prevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pdf, {\n      targetRef: ref,\n      filename: \"/MyRegisteredVisitors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, ({\n      toPdf\n    }) => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: toPdf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Generate Pdf\"))));\n  }\n\n}\n\nMyRegisteredVisitors.propTypes = {\n  visitors: PropTypes.array.isRequired,\n  fetchVisitors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  visitors: state.visitors.visitors\n});\n\nexport default connect(mapStateToProps, {\n  fetchVisitors\n})(MyRegisteredVisitors);","map":{"version":3,"sources":["C:/Users/USER/Desktop/avm/VisitorManagement/src/components/Admin/MyRegisteredVisitors.js"],"names":["React","Component","connect","PropTypes","Sidebar","fetchVisitors","VisitorsDetails","Pagination","ReactDOM","Pdf","MyRegisteredVisitors","state","posts","currentPage","postsPerPage","loading","componentDidMount","setState","props","visitors","render","ref","createRef","length","totalPages","Math","ceil","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNum","nextPage","prevPage","toPdf","propTypes","array","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Sidebar from \"../Layout/Sidebar\";\r\nimport { fetchVisitors } from \"../../actions/adminActions\";\r\nimport VisitorsDetails from \"./VisitorsDetails\";\r\nimport Pagination from \"./Pagination\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nclass MyRegisteredVisitors extends Component {\r\n  state = {\r\n    posts: [],\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ loading: true });\r\n    const { fetchVisitors } = this.props;\r\n    await fetchVisitors();\r\n    const { visitors } = this.props;\r\n    this.setState({\r\n      posts: visitors,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { posts, postsPerPage, currentPage, loading } = this.state;\r\n    const ref = React.createRef();\r\n    if (loading) {\r\n      return (\r\n        <div className=\"forgot-password text-center mt-4 loading\">\r\n          <p className=\"spinner-border text-primary  my-3\"></p>\r\n          <p className=\"my-2\">Processing...</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!posts || posts.length === 0) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2 bg-info sidebar\">\r\n            <Sidebar />\r\n          </div>\r\n          <div\r\n            className=\"container alert alert-info text-center mt-5 col-md-4 info-cont mt-4\"\r\n            role=\"alert\"\r\n          >\r\n            You have no registered visitor yet.\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const totalPages = Math.ceil(posts.length / postsPerPage);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = (pageNum) => this.setState({ currentPage: pageNum });\r\n    const nextPage = () => {\r\n      if (currentPage + 1 > totalPages) return;\r\n      this.setState({ currentPage: currentPage + 1 });\r\n    };\r\n    const prevPage = () => {\r\n      if (currentPage - 1 < 1) return;\r\n      this.setState({ currentPage: currentPage - 1 });\r\n    };\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2 d-none d-sm-block d-xs-block sidebar\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-md-8 mx-auto mt-3\">\r\n          <h2 className=\"my-3 text-center\">Registered Visitors</h2>\r\n          <VisitorsDetails posts={currentPosts} loading={loading} />\r\n          <Pagination\r\n            postsPerPage={postsPerPage}\r\n            totalPosts={posts.length}\r\n            paginate={paginate}\r\n            nextPage={nextPage}\r\n            prevPage={prevPage}\r\n          />\r\n            <Pdf targetRef={ref} filename=\"/MyRegisteredVisitors\">\r\n        {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n      </Pdf>\r\n        </div>\r\n      \r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMyRegisteredVisitors.propTypes = {\r\n  visitors: PropTypes.array.isRequired,\r\n  fetchVisitors: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  visitors: state.visitors.visitors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchVisitors })(\r\n  MyRegisteredVisitors\r\n);\r\n"]},"metadata":{},"sourceType":"module"}